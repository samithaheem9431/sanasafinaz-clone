<!DOCTYPE html>
<html>
<head>
    <title>Add to Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        body {
            background-color: #f9f9f9;
            font-family: 'Arial', sans-serif;
        }
        .product-image {
            max-width: 100%;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease;
        }
        .product-image:hover {
            transform: scale(1.05);
        }
        .container {
            padding: 30px 15px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        h2, h3 {
            font-weight: 600;
        }
        .form-container {
            background: #f0f4f7;
            padding: 20px;
            border-radius: 8px;
            box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.1);
        }
        .form-group label {
            font-weight: 500;
        }
        .btn-primary {
            background: linear-gradient(to right, #007bff, #0056b3);
            border: none;
            padding: 12px 20px;
            border-radius: 50px;
            font-size: 16px;
            font-weight: 600;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        .btn-outline-secondary {
            border-radius: 50px;
        }
        .text-primary {
            color: #ff5722 !important;
            font-weight: bold;
        }
        .form-container textarea, 
        .form-container input, 
        .form-container select {
            border-radius: 5px;
            border: 1px solid #ced4da;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            transition: border-color 0.2s ease;
        }
        .form-container textarea:focus, 
        .form-container input:focus, 
        .form-container select:focus {
            border-color: #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);
        }
        .animate-fade-in {
            animation: fadeIn 1s ease-in-out;
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        .card-details {
            display: none;
        }
        .card-input-wrapper {
            position: relative;
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .card-logo {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            height: 35px;
            width: auto;
            pointer-events: none;
            transition: all 0.3s ease;
        }

        #cardNumberInput {
            padding-right: 60px;
        }

        .card-types {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .card-type-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            opacity: 0.5;
            transition: all 0.3s ease;
        }

        .card-type-item.active {
            opacity: 1;
            transform: scale(1.1);
        }

        .card-type-item img {
            height: 40px;
            width: auto;
            margin-bottom: 5px;
        }

        .card-type-item span {
            font-size: 12px;
            color: #6c757d;
            text-align: center;
        }

        /* Update card types container */
        .card-types {
            display: flex;
            gap: 20px;
            margin-bottom: 25px;
            padding: 20px;
            background: linear-gradient(145deg, #ffffff, #f0f4f7);
            border-radius: 15px;
            flex-wrap: wrap;
            justify-content: center;
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .card-types:hover {
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.08);
        }

        /* Enhanced card type items */
        .card-type-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            opacity: 0.5;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            padding: 10px;
            border-radius: 12px;
            cursor: pointer;
            background: transparent;
        }

        .card-type-item:hover {
            transform: translateY(-5px);
            opacity: 0.8;
        }

        .card-type-item.active {
            opacity: 1;
            transform: scale(1.15);
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            animation: cardPulse 1.5s infinite;
        }

        .card-type-item img {
            height: 45px;
            width: auto;
            margin-bottom: 8px;
            filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
            transition: all 0.3s ease;
        }

        .card-type-item span {
            font-size: 13px;
            color: #4a5568;
            text-align: center;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .card-type-item.active span {
            color: #2d3748;
        }

        /* Card input styling */
        .card-input-wrapper {
            position: relative;
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        #cardNumberInput {
            padding: 15px 60px 15px 15px;
            font-size: 16px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            transition: all 0.3s ease;
            background: #ffffff;
        }

        #cardNumberInput:focus {
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);
        }

        .card-logo {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            height: 35px;
            width: auto;
            pointer-events: none;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
            animation: fadeInRight 0.5s ease-out;
        }

        /* Animations */
        @keyframes cardPulse {
            0% {
                box-shadow: 0 0 0 0 rgba(66, 153, 225, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(66, 153, 225, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(66, 153, 225, 0);
            }
        }

        @keyframes fadeInRight {
            from {
                opacity: 0;
                transform: translate3d(20px, -50%, 0);
            }
            to {
                opacity: 1;
                transform: translate3d(0, -50%, 0);
            }
        }

        /* Card details section animation */
        .card-details {
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .card-details.visible {
            opacity: 1;
            transform: translateY(0);
        }

        /* Card type indicator */
        .card-type-indicator {
            position: absolute;
            left: 15px;
            top: -20px;
            font-size: 12px;
            font-weight: 500;
            color: #4a5568;
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
        }

        .card-type-indicator.visible {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</head>
<body>
    <div class="container mt-5 animate-fade-in">
        <div class="row align-items-center">
            <div class="col-lg-6 mb-4">
                <img src="<%= product.picture %>" class="product-image img-fluid" alt="<%= product.title %>">
                <div class="text-center mt-4">
                    <h2 class="text-dark"><%= product.title %></h2>
                    <p class="text-muted"><%= product.description %></p>
                    <h4 class="text-primary">Price: PKR <%= product.price %></h4>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-container">
                    <h3 class="mb-4 text-center">Order Details</h3>
                    <form action="/place-order" method="POST">
                        <input type="hidden" name="productId" value="<%= product._id %>">

                        <div class="form-group">
                            <label><strong>Size:</strong></label>
                            <select name="size" class="form-control" required>
                                <option value="">Select Size</option>
                                <% if (product.quantities.small > 0) { %>
                                    <option value="small">Small (<%=product.quantities.small%> available)</option>
                                <% } %>
                                <% if (product.quantities.medium > 0) { %>
                                    <option value="medium">Medium (<%=product.quantities.medium%> available)</option>
                                <% } %>
                                <% if (product.quantities.large > 0) { %>
                                    <option value="large">Large (<%=product.quantities.large%> available)</option>
                                <% } %>
                            </select>
                        </div>

                        <div class="form-group">
                            <label><strong>Quantity:</strong></label>
                            <input type="number" 
                                   name="quantity" 
                                   id="quantityInput"
                                   class="form-control" 
                                   min="1" 
                                   required
                                   disabled>
                            <small id="stockMessage" class="form-text text-muted">Please select a size first</small>
                        </div>




                        <div class="billing-summary mt-4 p-3 bg-light rounded">
                            <h4 class="mb-3">Bill Summary</h4>
                            <input type="hidden" id="currentTaxRate" value="<%= settings?.taxRate || 0 %>">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Subtotal:</span>
                                <span>PKR <span id="subtotal"><%= product.price %></span></span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Tax (<span id="taxRateDisplay"><%= settings?.taxRate || 0 %></span>%):</span>
                                <span>PKR <span id="tax">0</span></span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Shipping Fee:</span>
                                <span>PKR 350</span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between font-weight-bold">
                                <span>Total Amount:</span>
                                <span>PKR <span id="total">0</span></span>
                            </div>
                        </div>

                        <hr>
                        <h4 class="mb-3 text-center">Shipping Details</h4>

                        <div class="form-group">
                            <label>Full Name:</label>
                            <input type="text" name="name" class="form-control" required>
                        </div>

                        <div class="form-group">
                            <label>Shipping Address:</label>
                            <textarea name="address" class="form-control" rows="2" required></textarea>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>City:</label>
                                    <input type="text" name="city" class="form-control" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Postal Code:</label>
                                    <input type="text" name="postalCode" class="form-control" required>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Phone Number:</label>
                            <input type="tel" name="phone" class="form-control" required>
                        </div>

                        <div class="form-group">
                            <label>Email Address:</label>
                            <input type="email" 
                                   name="email" 
                                   class="form-control" 
                                   pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                                   oninvalid="this.setCustomValidity('Please enter a valid email address')"
                                   oninput="this.setCustomValidity('')"
                                   required>
                            <small class="form-text text-muted">Please enter a valid email address</small>
                        </div>

                        <!-- Billing Summary -->
                        

                        <div class="form-group">
                            <label><strong>Payment Method:</strong></label>
                            <select name="paymentMethod" id="paymentMethod" class="form-control" required>
                                <option value="">Select Payment Method</option>
                                <option value="cash">Cash on Delivery</option>
                                <option value="card">Credit/Debit Card</option>
                                <option value="jazzcash">JazzCash</option>
                                <option value="easypaisa">EasyPaisa</option>
                            </select>
                        </div>

                        <div class="card-details" id="cardDetails" style="display: none;">
                            <h5 class="mb-3">Card Details</h5>
                            
                            <div class="card-types">
                                <div class="card-type-item" data-card="visa">
                                    <img src="/images/card-logos/visa.png" alt="Visa">
                                    <span>Visa</span>
                                </div>
                                <div class="card-type-item" data-card="mastercard">
                                    <img src="/images/card-logos/mastercard.png" alt="Mastercard">
                                    <span>Mastercard</span>
                                </div>
                                <div class="card-type-item" data-card="amex">
                                    <img src="/images/card-logos/amex.png" alt="American Express">
                                    <span>Amex</span>
                                </div>
                                <div class="card-type-item" data-card="paypak">
                                    <img src="/images/card-logos/paypak.png" alt="PayPak">
                                    <span>PayPak</span>
                                </div>
                                <div class="card-type-item" data-card="unionpay">
                                    <img src="/images/card-logos/unionpay.png" alt="UnionPay">
                                    <span>UnionPay</span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Card Number:</label>
                                <div class="card-input-wrapper">
                                    <input type="text" 
                                           id="cardNumberInput"
                                           name="cardNumber" 
                                           class="form-control card-input" 
                                           placeholder="1234 5678 9012 3456" 
                                           maxlength="19" 
                                           autocomplete="cc-number"
                                           required>
                                    <img id="cardLogo" class="card-logo" style="display: none;" alt="Card Logo">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Expiry Date:</label>
                                <input type="text" name="expiryDate" class="form-control card-input" placeholder="MM/YY" 
                                       pattern="^(0[1-9]|1[0-2])\/\d{2}$">
                            </div>
                            <div class="form-group">
                                <label>CVV:</label>
                                <input type="text" name="cvv" class="form-control card-input" placeholder="123" 
                                       maxlength="4" pattern="\d{3,4}" inputmode="numeric">
                            </div>
                        </div>

                        <div class="mobile-payment-details" id="mobilePaymentDetails" style="display: none;">
                            <h5 class="mb-3">Mobile Payment Details</h5>
                            <div class="form-group">
                                <label>Mobile Number:</label>
                                <input type="tel" name="mobileNumber" class="form-control mobile-input" 
                                       placeholder="03XX-XXXXXXX" 
                                       pattern="03[0-9]{2}-[0-9]{7}" 
                                       maxlength="12">
                                <small class="form-text text-muted">Enter your mobile number in format: 03XX-XXXXXXX</small>
                            </div>
                        </div>

                        <script>
                            // Store available quantities
                            const availableQuantities = {
                                small: parseInt('<%- product.quantities.small %>', 10),
                                medium: parseInt('<%- product.quantities.medium %>', 10),
                                large: parseInt('<%- product.quantities.large %>', 10)
                            };

                            // Get DOM elements
                            const sizeSelect = document.querySelector('select[name="size"]');
                            const quantityInput = document.getElementById('quantityInput');
                            const stockMessage = document.getElementById('stockMessage');

                            // Handle size selection
                            sizeSelect.addEventListener('change', function() {
                                const selectedSize = this.value;
                                const availableStock = availableQuantities[selectedSize];

                                if (selectedSize) {
                                    quantityInput.disabled = false;
                                    quantityInput.max = availableStock;
                                    quantityInput.value = "1";
                                    stockMessage.textContent = `Available stock: ${availableStock}`;
                                    stockMessage.className = 'form-text text-info';
                                } else {
                                    quantityInput.disabled = true;
                                    quantityInput.value = "";
                                    stockMessage.textContent = 'Please select a size first';
                                    stockMessage.className = 'form-text text-muted';
                                }

                                calculateBill();
                            });

                            // Handle quantity input
                            quantityInput.addEventListener('input', function() {
                                const selectedSize = sizeSelect.value;
                                const availableStock = availableQuantities[selectedSize];
                                const quantity = parseInt(this.value) || 0;

                                if (quantity > availableStock) {
                                    this.value = availableStock;
                                    stockMessage.textContent = `Maximum available stock is ${availableStock}`;
                                    stockMessage.className = 'form-text text-danger';
                                } else if (quantity < 1) {
                                    this.value = 1;
                                    stockMessage.textContent = `Minimum quantity is 1`;
                                    stockMessage.className = 'form-text text-danger';
                                } else {
                                    stockMessage.textContent = `Available stock: ${availableStock}`;
                                    stockMessage.className = 'form-text text-info';
                                }

                                calculateBill();
                            });

                            // Calculate bill function
                            function calculateBill() {
                                const quantity = parseInt(quantityInput.value) || 0;
                                const price = parseFloat('<%= product.price %>');
                                const taxRate = parseFloat(document.getElementById('currentTaxRate').value);
                                const subtotal = quantity * price;
                                const tax = subtotal * (taxRate / 100);
                                const shippingFee = 350;
                                const total = subtotal + tax + shippingFee;

                                document.getElementById('subtotal').innerHTML = subtotal.toFixed(2);
                                document.getElementById('tax').innerHTML = tax.toFixed(2);
                                document.getElementById('total').innerHTML = total.toFixed(2);

                                // Update hidden fields
                                document.querySelector('input[name="billing[subtotal]"]').value = subtotal;
                                document.querySelector('input[name="billing[tax]"]').value = tax;
                                document.querySelector('input[name="billing[total]"]').value = total;
                            }

                            // Initialize bill calculation when page loads
                            window.onload = function() {
                                calculateBill();
                                
                                // Form validation
                                document.querySelector('form').onsubmit = function(e) {
                                    const selectedSize = sizeSelect.value;
                                    const quantity = parseInt(quantityInput.value) || 0;
                                    const availableStock = availableQuantities[selectedSize];

                                    if (!selectedSize) {
                                        e.preventDefault();
                                        alert('Please select a size');
                                        return false;
                                    }

                                    if (quantity <= 0 || quantity > availableStock) {
                                        e.preventDefault();
                                        alert(`Please enter a valid quantity (1-${availableStock})`);
                                        return false;
                                    }

                                    calculateBill();
                                };
                            };

                            // Add event listener to quantity input
                            document.querySelector('input[name="quantity"]').addEventListener('input', calculateBill);

                            document.getElementById('paymentMethod').addEventListener('change', function() {
                                const cardDetails = document.getElementById('cardDetails');
                                const mobilePaymentDetails = document.getElementById('mobilePaymentDetails');
                                const cardInputs = cardDetails.querySelectorAll('.card-input');
                                const mobileInputs = mobilePaymentDetails.querySelectorAll('.mobile-input');
                                
                                // Reset all inputs
                                cardInputs.forEach(input => {
                                    input.required = false;
                                    input.value = '';
                                });
                                mobileInputs.forEach(input => {
                                    input.required = false;
                                    input.value = '';
                                });
                                
                                // Hide both sections initially
                                cardDetails.style.display = 'none';
                                mobilePaymentDetails.style.display = 'none';
                                
                                if (this.value === 'card') {
                                    cardDetails.style.display = 'block';
                                    cardInputs.forEach(input => input.required = true);
                                } else if (this.value === 'jazzcash' || this.value === 'easypaisa') {
                                    mobilePaymentDetails.style.display = 'block';
                                    mobileInputs.forEach(input => input.required = true);
                                }
                            });
                        </script>

                        <!-- Hidden billing fields -->
                        <input type="hidden" name="billing[subtotal]" value="0">
                        <input type="hidden" name="billing[tax]" value="0">
                        <input type="hidden" name="billing[shippingFee]" value="350">
                        <input type="hidden" name="billing[total]" value="0">

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">Place Order</button>
                            <a href="/women" class="btn btn-outline-secondary ml-2">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/cardDetector.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const cardInput = document.getElementById('cardNumberInput');
        const cardLogo = document.getElementById('cardLogo');
        const cardTypes = document.querySelectorAll('.card-type-item');
        const cardDetails = document.getElementById('cardDetails');

        // Show card details section with animation
        document.getElementById('paymentMethod').addEventListener('change', function() {
            if (this.value === 'card') {
                cardDetails.style.display = 'block';
                setTimeout(() => {
                    cardDetails.classList.add('visible');
                }, 50);
            } else {
                cardDetails.classList.remove('visible');
                setTimeout(() => {
                    cardDetails.style.display = 'none';
                }, 500);
            }
        });

        cardInput.addEventListener('input', function(e) {
            let value = this.value.replace(/\D/g, '');
            
            // Format the number with spaces
            let formattedValue = '';
            for (let i = 0; i < value.length; i++) {
                if (i > 0 && i % 4 === 0) {
                    formattedValue += ' ';
                }
                formattedValue += value[i];
            }
            this.value = formattedValue;

            // Detect card type
            const card = detectCardType(value);

            // Reset all card types to inactive with smooth transition
            cardTypes.forEach(item => {
                item.classList.remove('active');
                item.style.transform = 'scale(1)';
            });

            if (card && value.length >= 2) {
                cardLogo.src = card.logo;
                cardLogo.style.display = 'block';
                
                // Activate the detected card type with animation
                const activeCard = document.querySelector(`.card-type-item[data-card="${card.type}"]`);
                if (activeCard) {
                    activeCard.classList.add('active');
                    activeCard.style.transform = 'scale(1.15)';
                }
            } else {
                cardLogo.style.display = 'none';
            }
        });

        // Add hover effect to card type items
        cardTypes.forEach(item => {
            item.addEventListener('mouseenter', function() {
                if (!this.classList.contains('active')) {
                    this.style.transform = 'scale(1.1)';
                }
            });

            item.addEventListener('mouseleave', function() {
                if (!this.classList.contains('active')) {
                    this.style.transform = 'scale(1)';
                }
            });
        });
    });
    </script>
</body>
</html>
